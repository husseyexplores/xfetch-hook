var xfetch;(xfetch||={}).fetchHook=(()=>{var w=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var _=Object.prototype.hasOwnProperty;var A=(t,e)=>{for(var o in e)w(t,o,{get:e[o],enumerable:!0})},D=(t,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of M(e))!_.call(t,r)&&r!==o&&w(t,r,{get:()=>e[r],enumerable:!(s=k(e,r))||s.enumerable});return t};var N=t=>D(w({},"__esModule",{value:!0}),t);var O={};A(O,{default:()=>P});var q=t=>[...t.entries()].reduce((e,[o,s])=>(e[o]=s,e),{}),m=t=>new URL(t),E=(t,e,o=null)=>t.reduce((s,r)=>r.call(o,s),e);function P({namespace:t=globalThis||window,fetch:e=t.fetch}={}){if(t==null&&(t=globalThis||window),typeof t!="object")throw new Error("[xfetch-hook] - `namespace` should be an object");if(typeof e!="function")throw new Error("[xfetch-hook] - `fetch` should be a function");if(typeof e.onRequest=="function")return e.stopIntercepting;let o="fetch",s=[];async function r(...a){let f=[],l=[],c=new Request(...a),p=null,d=null,y=null,R=null;for(let u of s){let n=await u({request:c,fetch:e,get url(){return y||(y=m(c.url))},get headers(){return R||(R=q(c.headers))}});!n||(n.request instanceof Request&&(c=n.request),n.response instanceof Response&&(p=n.response),typeof n.listen=="function"&&f.push(n.listen),typeof n.as=="string"&&(d=n.as,typeof n.transformResponse=="function"&&l.push(n.transformResponse)))}async function x(u){let n=u,g=d&&typeof u[d]=="function",j=await(g&&u.clone()[d]());if(l.length>0){let i=E(l,j);typeof i!="string"&&(i=JSON.stringify(i)),n=new Response(i,{status:u.status,statusText:u.statusText,headers:u.headers})}return f.forEach(i=>{let h=n.clone();g?h[d]().then(i.bind(null,h)):i(h)}),n}return p?x(p):e(c).then(x)}Object.defineProperty(r,"name",{value:o,configurable:!0});function U(){t[o]=r}U();function b(){t[o]=e}function T(a){s=s.filter(f=>f!==a)}function H(a){s.push(a)}return r.stopProxying=b,r.onRequest=function(f){if(typeof f!="function")throw new Error("[xfetch-hook] - `onRequest`: argument must be a function");let l=()=>T(f);return s.find(p=>p===f)||H(f),l},b}return N(O);})();
xfetch.fetchHook = xfetch.fetchHook.default;
